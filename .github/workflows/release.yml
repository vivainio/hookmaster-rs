name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release
    strategy:
      matrix:
        build: [linux, macos, macos-arm, windows]
        include:
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-gnu
          archive-name: hookmaster-linux.tar.gz
        - build: macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          archive-name: hookmaster-macos.tar.gz
        - build: macos-arm
          os: macos-latest
          rust: stable
          target: aarch64-apple-darwin
          archive-name: hookmaster-macos-arm.tar.gz
        - build: windows
          os: windows-latest
          rust: stable
          target: x86_64-pc-windows-msvc
          archive-name: hookmaster-windows.zip
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}

    - name: Get the release version from the tag
      shell: bash
      if: env.VERSION == ''
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        echo "version is: ${{ env.VERSION }}"

    - name: Build release binary
      shell: bash
      run: |
        cargo build --verbose --release --target ${{ matrix.target }}
        
    - name: Strip release binary (linux and macos)
      if: matrix.build == 'linux' || matrix.build == 'macos'
      shell: bash
      run: |
        strip "target/${{ matrix.target }}/release/hookmaster"
        
    - name: Build archive
      shell: bash
      run: |
        mkdir -p "dist"
        
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp "target/${{ matrix.target }}/release/hookmaster.exe" "dist/"
          cd dist
          7z a "../${{ matrix.archive-name }}" hookmaster.exe
          cd ..
        else
          cp "target/${{ matrix.target }}/release/hookmaster" "dist/"
          cd dist
          tar czf "../${{ matrix.archive-name }}" hookmaster
          cd ..
        fi

    - name: Upload release archive
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.archive-name }}
        path: ${{ matrix.archive-name }}

  create-release:
    name: Create Release
    needs: [build-release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Get the release version from the tag
      shell: bash
      if: env.VERSION == ''
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        echo "version is: ${{ env.VERSION }}"
        
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: artifacts/**/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 